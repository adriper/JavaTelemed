CREATE TABLE TIPO_PROFISSIONAL(
    ID_TIPO_PROFISSIONAL    SERIAL          NOT NULL        PRIMARY KEY,
    DESCRICAO               VARCHAR(255)    NOT NULL,
    DESCRICAO_CONSELHO      VARCHAR(255),
    SIGLA_CONSELHO          VARCHAR(20),
    PRESCRICAO              BOOLEAN         NOT NULL        DEFAULT FALSE,
    VIDEOCONFERENCIA        BOOLEAN         NOT NULL        DEFAULT FALSE
);


CREATE TABLE ESTADO(
    ID_ESTADO               SERIAL          NOT NULL     PRIMARY KEY,
    NOME                    VARCHAR(255)    NOT NULL,
    SIGLA                   CHAR(2)         NOT NULL     UNIQUE
);    

CREATE TABLE CIDADE(
    ID_CIDADE               SERIAL          NOT NULL     PRIMARY KEY,
    ID_ESTADO               INTEGER         NOT NULL,
    NOME                    VARCHAR(255)    NOT NULL,
    CODIGO                  VARCHAR(20)     NOT NULL,
    IND_ATENDIMENTO         BOOLEAN         NOT NULL     DEFAULT FALSE,
    FOREIGN KEY (ID_ESTADO)  REFERENCES ESTADO(ID_ESTADO) ON DELETE RESTRICT
);



CREATE TABLE PROFISSIONAL  ( 
	ID_PROFISSIONAL   	  SERIAL        NOT NULL        PRIMARY KEY,
    NOME                  VARCHAR(100)  NOT NULL,
    SOBRENOME             VARCHAR(100)  NOT NULL,
    CPF                   VARCHAR(20)   NOT NULL,
	DT_NASCIMENTO     	  DATE          NOT NULL,
	SEXO              	  CHARACTER(1)  NOT NULL,
	ID_TIPO_PROFISSIONAL  INTEGER       NOT NULL,
	NUMERO_REGISTRO       CHAR(20)      NOT NULL,
    EMAIL                 VARCHAR(60)   NOT NULL,
    SENHA                 VARCHAR(128)  NOT NULL,
    TELEFONE              VARCHAR(30),
    PAPEL                 VARCHAR(30)    NOT NULL        DEFAULT  'user',
    IND_ATIVO             BOOLEAN        NOT NULL       DEFAULT  true,
    IND_SENHA_ATIVA       BOOLEAN        NOT NULL           DEFAULT false,
    FOREIGN KEY (ID_TIPO_PROFISSIONAL) REFERENCES TIPO_PROFISSIONAL(ID_TIPO_PROFISSIONAL) ON DELETE RESTRICT        
);



CREATE TABLE ESPECIALIDADE( 
	ID_ESPECIALIDADE   	  SERIAL       NOT NULL        PRIMARY KEY,
    CODIGO               CHAR(10),
    DESCRICAO             VARCHAR(60)   NOT NULL
);


CREATE TABLE PROFISSIONAL_ESPECIALIDADE(
    ID_PROFISSIONAL         INTEGER             NOT NULL,
    ID_ESPECIALIDADE        INTEGER             NOT NULL,
    PRIMARY KEY (ID_PROFISSIONAL, ID_ESPECIALIDADE),
    FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE RESTRICT        ,
    FOREIGN KEY (ID_ESPECIALIDADE) REFERENCES ESPECIALIDADE(ID_ESPECIALIDADE) ON DELETE RESTRICT        
);


CREATE TABLE ESTADO_CONSULTA(
    ID_ESTADO_CONSULTA                    SERIAL          NOT NULL        PRIMARY KEY,
    DESCRICAO                             VARCHAR(255)    NOT NULL,
    ID_PROXIMO_ESTADO_PACIENTE            INTEGER         REFERENCES ESTADO_CONSULTA (ID_ESTADO_CONSULTA) ON DELETE RESTRICT,
    TERMO_ESCLARECIMENTO                  TEXT
);

CREATE TABLE ESTADO_CONSULTA_PROXIMOS_ESTADOS(
    ID_ESTADO_CONSULTA                    INTEGER          NOT NULL       REFERENCES ESTADO_CONSULTA (ID_ESTADO_CONSULTA) ON DELETE RESTRICT,
    ID_PROXIMO_ESTADO                     INTEGER          NOT NULL       REFERENCES ESTADO_CONSULTA (ID_ESTADO_CONSULTA) ON DELETE RESTRICT,
    PRIMARY KEY(ID_ESTADO_CONSULTA, ID_PROXIMO_ESTADO)
);


CREATE TABLE ESTADO_CONSULTA_TIPO_PROFISSIONAL(
    ID_ESTADO_CONSULTA      INTEGER         NOT NULL,
    ID_TIPO_PROFISSIONAL    INTEGER         NOT NULL,
    PRIMARY KEY (ID_ESTADO_CONSULTA, ID_TIPO_PROFISSIONAL)
);

CREATE TABLE FICHA_ATENDIMENTO(
    ID_FICHA                SERIAL                  NOT NULL        PRIMARY KEY,
    PROTOCOLO               VARCHAR(255)            NOT NULL,
    SENHA                   BYTEA                   NOT NULL,
    NOME                    BYTEA                   NOT NULL,
    CPF                     BYTEA,
    TELEFONE                BYTEA,
    EMAIL                   BYTEA,
    ID_CIDADE               INTEGER                 NOT NULL,
    ID_CIDADE_SEDE          INTEGER                 NOT NULL,
    NOME_MAE                BYTEA,
    ENDERECO                BYTEA, 
    CEP                     BYTEA,   
    ENDERECO_NUMERO         BYTEA, 
    PROFISSAO               VARCHAR(255),    
    ID_ESTADO_CONSULTA      INTEGER                 NOT NULL,
    DATA_NASCIMENTO         DATE                    NOT NULL,
    SEXO                    CHAR(1),
    NOME_RESPONSAVEL_LEGAL        BYTEA,
    CPF_RESPONSAVEL_LEGAL         BYTEA,
    DATA_NASCIMENTO_RESPONSAVEL_LEGAL         DATE,
    BAIRRO                  VARCHAR(255),
    CONVENIO_SAUDE          VARCHAR(255),
    VIAGEM_RECENTE          VARCHAR(255),
    CONTATO_CASO_CONFIRMADO BYTEA,
    DATA_INICIAL_SINTOMAS     DATE,
    IND_FEBRE               BOOLEAN,
    IND_CEFALEIA            BOOLEAN,
    IND_MIALGIA             BOOLEAN,
    IND_TOSSE               BOOLEAN,
    IND_DISPNEIA            BOOLEAN,
    OUTROS_SINTOMAS         BYTEA,
    IND_DIABETES            BOOLEAN,
    IND_HIPERTENSAO         BOOLEAN,
    IND_CARDIOPATIA         BOOLEAN,
    IND_ASMA                BOOLEAN,
    OUTRAS_DOENCAS          BYTEA,
    ALERGIA_MEDICAMENTOS    BYTEA,
    MEDICACAO_CONTINUA      BYTEA,
    IND_PRIORIDADE          CHAR(1),
    IND_SUSPEITO            CHAR(1)                 NOT NULL        DEFAULT 'N',
    IP                      VARCHAR(15)             NOT NULL,
    MOMENTO_CRIACAO         TIMESTAMP               NOT NULL,
    MOMENTO_ULTIMA_MENSAGEM TIMESTAMP,
    DESCRICAO               BYTEA,
    ID_PROFISSIONAL         INTEGER,
    ID_ESTUDANTE            INTEGER,
    LINK_RECEITA            BYTEA,
    DECLARACAO_VERACIDADE   BOOLEAN                NOT NULL DEFAULT true,
    TERMO_ACEITE            TEXT,
    CONSIDERACOES_PROFISSIONAL      BYTEA,
    SALA_ATENDIMENTO        VARCHAR(64),
    FOREIGN KEY (ID_ESTADO_CONSULTA) REFERENCES ESTADO_CONSULTA(ID_ESTADO_CONSULTA) ON DELETE RESTRICT,
    FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE RESTRICT,
    FOREIGN KEY (ID_ESTUDANTE) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE RESTRICT,
    FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE) ON DELETE RESTRICT,
    FOREIGN KEY (ID_CIDADE_SEDE) REFERENCES CIDADE(ID_CIDADE) ON DELETE RESTRICT
);


CREATE TABLE NOTA_ATENDIMENTO( 
    ID_NOTA             SERIAL         NOT NULL       PRIMARY KEY,
    ID_FICHA            INTEGER        NOT NULL,
    ID_ESTADO_CONSULTA  INTEGER,          
    ID_PROFISSIONAL     INTEGER,
    ID_ESTUDANTE        INTEGER,
    DESCRICAO           BYTEA,
    MOMENTO_CRIACAO     TIMESTAMP     NOT NULL,
    MOMENTO_ACESSO_PACIENTE         TIMESTAMP,
    FILE_NAME           VARCHAR(255),
    FILE_TYPE           VARCHAR(100),
    FILE_DATA         BYTEA,    
    FOREIGN KEY (ID_FICHA) REFERENCES FICHA_ATENDIMENTO(ID_FICHA) ON DELETE RESTRICT,
    FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE RESTRICT,
    FOREIGN KEY (ID_ESTUDANTE) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE RESTRICT,
    FOREIGN KEY (ID_ESTADO_CONSULTA) REFERENCES ESTADO_CONSULTA(ID_ESTADO_CONSULTA) ON DELETE RESTRICT
);


CREATE TABLE PROFISSIONAL_CIDADE_SEDE(
    ID_PROFISSIONAL         INTEGER             NOT NULL,
    ID_CIDADE               INTEGER             NOT NULL,
    PRIMARY KEY (ID_PROFISSIONAL, ID_CIDADE),
    FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE CASCADE,
    FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE) ON DELETE RESTRICT        
);

/*
CREATE TABLE PROFISSIONAL_ESPECIALIDADE(
    ID_PROFISSIONAL         INTEGER             NOT NULL,
    ID_ESPECIALIDADE        INTEGER             NOT NULL,
    PRIMARY KEY (ID_PROFISSIONAL, ID_ESPECIALIDADE),
    FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE CASCADE,
    FOREIGN KEY (ID_ESPECIALIDADE) REFERENCES ESPECIALIDADE(ID_ESPECIALIDADE) ON DELETE RESTRICT        
);*/

CREATE TABLE CIDADE_ATENDIDAS (
    ID_CIDADE_SEDE          INTEGER             NOT NULL,
    ID_CIDADE               INTEGER             NOT NULL,
    PRIMARY KEY (ID_CIDADE_SEDE, ID_CIDADE),
    FOREIGN KEY (ID_CIDADE_SEDE) REFERENCES CIDADE(ID_CIDADE) ON DELETE CASCADE,
    FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE) ON DELETE RESTRICT        
);

CREATE TABLE INDICADOR_ESTADO_CONSULTA(
    INDICADOR           VARCHAR(30)             NOT NULL,
    ID_ESTADO_CONSULTA  INTEGER                 NOT NULL,
    PRIMARY KEY (INDICADOR, ID_ESTADO_CONSULTA),
    FOREIGN KEY (ID_ESTADO_CONSULTA) REFERENCES ESTADO_CONSULTA (ID_ESTADO_CONSULTA) ON DELETE CASCADE
    );


CREATE TABLE TOKEN_RECUPERACAO_SENHA (
    ID_TOKEN                        SERIAL NOT NULL PRIMARY KEY,
    ID_PROFISSIONAL                 INTEGER NOT NULL,
    TOKEN                           VARCHAR(256) NOT NULL,
    DATA_CRIACAO                    TIMESTAMP NOT NULL,
    DATA_VALIDADE                   TIMESTAMP NOT NULL,
    IND_ATIVO                       BOOLEAN NOT NULL,
    
    CONSTRAINT FK_PROFISSIONAL FOREIGN KEY (ID_PROFISSIONAL) REFERENCES PROFISSIONAL ON DELETE CASCADE
);


CREATE TABLE PROFISSIONAL_PRECEPTOR(
    ID_PROFISSIONAL_PRECEPTOR               SERIAL            NOT NULL        PRIMARY KEY,
    ID_ALUNO                                INTEGER           NOT NULL        REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE CASCADE,
    ID_PRECEPTOR                            INTEGER           NOT NULL        REFERENCES PROFISSIONAL(ID_PROFISSIONAL) ON DELETE CASCADE,
    VALIDADE                                TIMESTAMP         NOT NULL,
    INICIO                                  TIMESTAMP         NOT NULL,
    ATIVO                                   BOOLEAN           DEFAULT true
);

create index cidade_atendimento on cidade(id_estado, ind_atendimento);
create index cidade_estado on cidade(id_estado);

INSERT INTO estado (nome, sigla) VALUES
('Acre', 'AC'),
('Alagoas', 'AL'),
('Amap√°', 'AP'),
('Amazonas', 'AM'),
('Bahia', 'BA'),
('Cear√°', 'CE'),
('Distrito Federal', 'DF'),
('Esp√≠rito Santo', 'ES'),
('Goi√°s', 'GO'),
('Maranh√£o', 'MA'),
('Mato Grosso', 'MT'),
('Mato Grosso do Sul', 'MS'),
('Minas Gerais', 'MG'),
('Par√°', 'PA'),
('Para√≠ba', 'PB'),
('Paran√°', 'PR'),
('Pernambuco', 'PE'),
('Piau√≠', 'PI'),
('Rio de Janeiro', 'RJ'),
('Rio Grande do Norte', 'RN'),
('Rio Grande do Sul', 'RS'),
('Rond√¥nia', 'RO'),
('Roraima', 'RR'),
('Santa Catarina', 'SC'),
('S√£o Paulo', 'SP'),
('Sergipe', 'SE'),
('Tocantins', 'TO');
